// PI_BEGIN
console.log("注入 thirdApi.js success");


//--------标签样式----------------------------------------------------------------------------------------------------------------------------

/**
 * 第三方api样式
 */
pi_tools.createThirdApiStyleTag = function() {
    var cssText = `
    /* 公共 */
    .pi-mask {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    background-color: rgba(50, 50, 50, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    }
    .pi-btns {
    margin: 30px 40px 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    }
    .pi-cancel-btn {
    width: 220px;
    height: 80px;
    border-radius: 50px;
    border: 1px dashed rgba(136, 136, 136, 1);
    font-size: 32px;
    color: #888;
    display: flex;
    justify-content: center;
    align-items: center;
    }
    .pi-ok-btn {
    width: 220px;
    height: 80px;
    background: linear-gradient(
        270deg,
        rgba(68, 206, 237, 1) 0%,
        rgba(62, 179, 241, 1) 100%
    );
    box-shadow: 0px 5px 10px 0px rgba(13, 131, 246, 0.1);
    border-radius: 50px;
    font-size: 32px;
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    }


    /* 获取openid */

    .pi-update-box {
    background-color: #fff;
    background-image: url(${pi_config.imgUrlPre}update_bg.png);
    background-repeat: no-repeat;
    background-size: 100% 235px;
    width: 630px;
    border-radius: 12px;
    padding-bottom: 30px;
    position: relative;
    }
    .pi-update-rocket {
    position: absolute;
    left: 50%;
    top: 0;
    transform: translate3d(-50%, -30%, 0);
    }
    .pi-update-content {
    padding: 20px 30px;
    }
    .pi-update-title {
    margin-top: 250px;
    font-size: 32px;
    color: #111;
    line-height: 45px;
    }
    .pi-update-items {
    margin-top: 20px;
    }
    .pi-update-item {
    font-size: 28px;
    line-height: 40px;
    color: #8e96ab;
    }





    /* 支付 */

    .pi-pay-title {
        font-size:38px;
        height: 90px;
        text-align: center;
        line-height: 90px;
        border-bottom: 1px solid #CCCCCC;
    }

    .pi-pay-content {
        padding-top: 20px;
        font-size: 28px;
    }

    .pi-pay-item {
        line-height: 40px;
        height: 40px;
        margin-bottom: 10px;
    }
    .pi-pay-text{
        font-weight:500;
    }
    .pi-pay-num{
        color: #318DE6;
    }
    .pi-pay-input{
        height: 80px;
        width: 100%;
        border: 1px solid #1E6DEF;
        background:rgba(249,249,249,1);
        border-radius: 6px;
        font-size: 32px;
        padding: 0px 15px;
        box-sizing: border-box;
        letter-spacing: 2px;
        margin-top: 15px;
        outline:none;
    }



    /* 加载 */

    .pi-loading-mask{
        position: absolute;
        margin: 0;
        top: 0;
        right: 0;   
        bottom: 0;
        left: 0;
        -webkit-transition: opacity .3s;
        transition: opacity .3s;
        color: #fff;
        font-size: 24px;
    }
    .pi-loading-spinner{
        width: 180px;
        height: 180px;
        background-color: rgba(0,0,0,.6);
        top: 50%;
        left: 50%;
        text-align: center;
        position: absolute;
        transform: translate(-50%,-50%);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        border-radius: 12px;
        padding-top: 10px;
    }
    .loading-img{
        width: 50px;
        height: 50px;
        border: 4px solid white;
        border-bottom-color:transparent;
        -webkit-animation: loading 1s 0s linear infinite;
        animation: loading 1s 0s linear infinite;
        opacity:1;
        border-radius:50%;
    }
    .pi-loading-text{
        color: #fff;
        margin: 10px 0 20px;
    }




    /* 动画 */

    @-webkit-keyframes bounceInUp {
    from,
    60%,
    75%,
    90%,
    to {
        -webkit-animation-timing-function: cubic-bezier(
        0.215,
        0.61,
        0.355,
        1
        );
        animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }

    from {
        opacity: 0;
        -webkit-transform: translate3d(0, 3000px, 0);
        transform: translate3d(0, 3000px, 0);
    }

    60% {
        opacity: 1;
        -webkit-transform: translate3d(0, -20px, 0);
        transform: translate3d(0, -20px, 0);
    }

    75% {
        -webkit-transform: translate3d(0, 10px, 0);
        transform: translate3d(0, 10px, 0);
    }

    90% {
        -webkit-transform: translate3d(0, -5px, 0);
        transform: translate3d(0, -5px, 0);
    }

    to {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
    }
    }

    @keyframes bounceInUp {
    from,
    60%,
    75%,
    90%,
    to {
        -webkit-animation-timing-function: cubic-bezier(
        0.215,
        0.61,
        0.355,
        1
        );
        animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }

    from {
        opacity: 0;
        -webkit-transform: translate3d(0, 3000px, 0);
        transform: translate3d(0, 3000px, 0);
    }

    60% {
        opacity: 1;
        -webkit-transform: translate3d(0, -20px, 0);
        transform: translate3d(0, -20px, 0);
    }

    75% {
        -webkit-transform: translate3d(0, 10px, 0);
        transform: translate3d(0, 10px, 0);
    }

    90% {
        -webkit-transform: translate3d(0, -5px, 0);
        transform: translate3d(0, -5px, 0);
    }

    to {
        -webkit-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
    }
    }

    @keyframes loading {
    0% {
        -webkit-transform: rotate(0deg);
            transform: rotate(0deg); 
    }
    100%{
        -webkit-transform: rotate(360deg);
                transform: rotate(360deg); 
    } 
    }

    .bounceInUp {
    -webkit-animation-name: bounceInUp;
    animation-name: bounceInUp;
    }
    .animated {
    -webkit-animation-duration: 1s;
    animation-duration: 1s;
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    }`;

    var style = document.createElement("style");
    style.type = "text/css";
    style.innerHTML = cssText
    document.getElementsByTagName("head")[0].appendChild(style);
}

window.addEventListener("load",pi_tools.createThirdApiStyleTag)





//--------创建标签----------------------------------------------------------------------------------------------------------------------------


//创建授权弹窗标签
pi_tools.createAuthorizeElementTag = function() {
    var htmlText = `
        <div class="pi-update-box animated bounceInUp">
            <img src="${pi_config.imgUrlPre}rocket.png" class="pi-update-rocket" />
            <div class="pi-update-content">
                <div class="pi-update-title">您将获取以下授权</span></div>
                <div class="pi-update-items">
                </div>
            </div>
            <div class="pi-btns">
                <div class="pi-cancel-btn">取消</div>
                <div class="pi-ok-btn">确定</div>
            </div>
        </div>`;
    var $mask = document.createElement("div");
    $mask.setAttribute("class", "pi-mask");
    $mask.innerHTML = htmlText;

    var $root = document.createElement("div");
    $root.setAttribute("id", "pi-root");
    $root.appendChild($mask);

    var $body = document.querySelector("body");
    $body.appendChild($root);
}

//创建支付弹窗标签
pi_tools.createPayElementTag = function() {
    var htmlText = `
        <div class="pi-update-box animated bounceInUp">
            <div class="pi-update-content">
                <div class="pi-pay-title">确认支付</div>
                <div class="pi-pay-content">
                    <div class="pi-pay-item">
                        <span>金额：</span><span id="pi_payCount" class="pi-pay-num">0.02ST</span>
                    </div>
                    <div class="pi-pay-item">
                        <span>发给：</span><span id="pi_payObject" class="pi-pay-text">LOL赛事竞猜</span>
                    </div>
                    <div class="pi-pay-item">
                        <span>余额：</span><span id="pi_payBalance" class="pi-pay-text">12ST</span>
                    </div>
                    <div>
                        <input class="pi-pay-input" type="password" placeholder="输入密码" name="" id="pi_password">
                    </div>
                </div>
            </div>
            <div class="pi-btns">
                <div class="pi-cancel-btn">取消</div>
                <div class="pi-ok-btn">确定</div>
            </div>
        </div>`;
    var $root = document.createElement("div");
    $root.setAttribute("class", "pi-mask");
    $root.innerHTML = htmlText;

    var $body = document.querySelector(".pi-root");
    $body.appendChild($root);
    $body.style.display = 'flex';
}

//创建设置免密弹窗标签
pi_tools.createInputBoxElementTag =  function(title) {
    var htmlText = `
        <div class="pi-update-box animated bounceInUp">
            <div class="pi-update-content">
                <div class="pi-pay-title">${title}</div>
                <div class="pi-pay-content">
                    <div>
                        <input class="pi-pay-input" type="password" placeholder="输入密码" name="" id="pi_password">
                    </div>
                </div>
            </div>
            <div class="pi-btns">
                <div class="pi-cancel-btn">取消</div>
                <div class="pi-ok-btn">确定</div>
            </div>
        </div>`;
    var $mask = document.createElement("div");
    $mask.setAttribute("class", "pi-mask");
    $mask.innerHTML = htmlText;

    var $root = document.createElement("div");
    $root.setAttribute("id", "pi-root");
    $root.appendChild($mask);

    document.querySelector("body").appendChild($root);
}

//创建加载弹窗标签
pi_tools.popNewLoading = function(loadingStr) {
    var htmlText = `
        <div class="pi-loading-mask">
            <div class="pi-loading-spinner">
                <div class="loading-img"></div>
                <p class="pi-loading-text">
                    ${loadingStr}
                </p>
            </div>
        </div>`;
    var $mask = document.createElement("div");
    $mask.setAttribute("class", "pi-loading-mask");
    $mask.innerHTML = htmlText;

    var $root = document.createElement("div");
    $root.setAttribute("id", "pi-root");
    $root.appendChild($mask);

    document.querySelector("body").appendChild($root);
}

/**
 * 密码弹框
 */
pi_tools.popInputBox = function (title,okCB,cancelCB){
    pi_tools.createInputBoxElementTag(title);
    var $ok = document.querySelector(".pi-ok-btn");
    var $cancel = document.querySelector(".pi-cancel-btn");
    var $input = document.getElementById("pi_password");

    $ok.addEventListener("click", function () {
        pi_tools.closePopBox();
        okCB && okCB($input.value);
    });

    $cancel.addEventListener("click", function () {
        cancelCB && cancelCB();
        pi_tools.closePopBox();
    });
};

//----------对外接口--------------------------------------------------------------------------------------------------------------------------------

//获取openID
pi_jsApi.authorize = function (payload, callBack) {
    pi_RPC_Method("app/api/JSAPI", "authorize", payload, function (error, result) {
        console.log('getOpenId call success', error);
        console.log('getOpenId call success', result);
        callBack(error, result);
    });
}


// 第三方支付
pi_jsApi.thirdPay = function (order, callBack) {
    var payCode = {
        SUCCESS : 1,     // 支付成功
        SETNOPASSWORD : 2,   // 余额足够  但是没有开启免密
        EXCEEDLIMIT : 3,   // 余额足够 并且开启免密 但是免密上限
        ERRORPSW: 4,   //密码错误
        RECHARGEFAILED: 5,  // 充值失败
        FAILED : 6     // 支付失败
    }
    pi_tools.closePopBox();
    pi_tools.popNewLoading('支付中...');
    pi_RPC_Method(pi_config.jsApi, "thirdPay", {order,webViewName:pi_config.webviewName}, function (error, res) {
        console.log('thirdPay call success',res);
        pi_tools.closePopBox();
        if(res.result === payCode.SUCCESS){
            pi_tools.popNewMessage("支付成功");
            callBack(error,res);
        }else if(res.result === payCode.SETNOPASSWORD || res.result === payCode.EXCEEDLIMIT){
            var title = res.result === payCode.SETNOPASSWORD ? "未开启免密支付，请输入密码" : "免密额度到达上限";
            pi_tools.popInputBox(title,function(value){
                pi_tools.popNewLoading('支付中...');
                pi_RPC_Method(pi_config.jsApi, "thirdPayDirect", {order,password:value}, function (error, res) {
                    console.log('thirdPayDirect call success',res);
                    pi_tools.closePopBox();
                    if(res.result === payCode.ERRORPSW){
                        pi_tools.popNewMessage("密码错误");
                        callBack(error,{ result:payCode.FAILED });
                    }else if(res.result === payCode.SUCCESS){
                        pi_tools.popNewMessage("支付成功");
                        callBack(error,res);
                    }else{
                        pi_tools.popNewMessage("支付失败");
                        callBack(error,res);
                    }
                    
                });
            });
        }else{
            pi_tools.popNewMessage("支付失败");
            callBack(error,{ result:payCode.FAILED });
        }
    });
}

// 第三方设置免密支付
// openFreeSecret:设置免密支付状态  
// 0:关闭，1:开启
pi_jsApi.setFreeSecrectPay = function (openFreeSecret) {
    pi_tools.closePopBox();
    var title = openFreeSecret ? "设置免密支付" : "关闭免密支付"; 
    pi_tools.popInputBox(title,function(value){
        var sendData = {
            appid: pi_config.appId,
            noPSW: openFreeSecret ? 1 : 0,
            password:value
        }
        pi_tools.popNewLoading('设置中...');
        pi_RPC_Method("app/api/JSAPI", "setFreeSecrectPay", sendData, function (resCode1, msg1) {
            if(msg1){
                pi_store.freeSecret = !pi_store.freeSecret;
                pi_tools.popNewMessage("设置成功");
            }else{
                pi_tools.popNewMessage("设置失败");
            }
            pi_tools.closePopBox();
        });
    });
}


// PI_END